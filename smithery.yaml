# Smithery configuration file: https://smithery.ai/docs/config#smitheryyaml

startCommand:
  type: stdio
  configSchema:
    # JSON Schema defining the configuration options for the MCP.
    type: object
    required: []
    properties:
      crdbHost:
        type: string
        default: 127.0.0.1
        description: CockcorachDB IP or hostname
      crdbPort:
        type: number
        default: 26257
        description: CockcorachDB port
      crdbUsername:
        type: string
        default: root
        description: CockcorachDB username
      crdbPwd:
        type: string
        default: ""
        description: CockcorachDB password
      crdbDatabase:
        type: string
        default: defaultdb
        description: CockcorachDB database
      crdbCAPath:
        type: string
        default: ""
        description: CA certificate path for verifying server
      crdbSSLKeyfile:
        type: string
        default: ""
        description: Client private key file for authentication
      crdbSSLCertfile:
        type: string
        default: ""
        description: Client certificate file for authentication
      crdbCertMode:
        type: string
        default: disable
        description: SSL Certificate requirements
  commandFunction:
    # A JS function that produces the CLI command based on the given config to start the MCP on stdio.
    |-
    (config) => ({
      command: 'uv',
      args: ['run', 'python', 'src/main.py'],
      env: {
        CRDB_HOST: config.crdbHost,
        CRDB_PORT: String(config.crdbPort),
        CRDB_USERNAME: config.crdbUsername,
        CRDB_PWD: config.crdbPwd,
        CRDB_DATABASE: config.crdbDatabase,
        CRDB_SSL_CA_PATH: config.crdbCAPath,
        CRDB_SSL_KEYFILE: config.crdbSSLKeyfile,
        CRDB_SSL_CERTFILE: config.crdbSSLCertfile,
        CRDB_SSL_MODE: config.crdbCertMode
      }
    })
  exampleConfig:
    crdbHost: 127.0.0.1
    crdbPort: 26257
    crdbUsername: root
    crdbPwd: ""
    crdbDatabase: defaultdb
    crdbCAPath: ""
    crdbSSLKeyfile: ""
    crdbSSLCertfile: ""
    crdbCertMode: required

